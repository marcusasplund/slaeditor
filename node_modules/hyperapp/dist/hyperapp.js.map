{"version":3,"sources":["dist/hyperapp.js"],"names":["global","factory","exports","module","define","amd","hyperapp","this","h","name","props","node","rest","children","length","arguments","push","Array","isArray","pop","app","state","actions","view","container","toVNode","element","map","nodeName","toLowerCase","call","childNodes","nodeType","nodeValue","render","renderLock","next","globalState","wiredActions","rootElement","patch","lastNode","invokeLaterStack","scheduleRender","setTimeout","copy","target","source","obj","i","set","path","value","slice","get","wireStateToActions","key","action","data","then","concat","getKey","setElementProp","isSVG","oldValue","setAttribute","removeAttribute","createElement","document","createTextNode","createElementNS","oncreate","appendChild","removeChildren","ondestroy","removeElement","parent","cb","done","removeChild","onremove","oldNode","nextSibling","insertBefore","oldProps","onupdate","updateElement","oldElements","oldKeyed","newKeyed","oldKey","oldChild","j","newChild","newKey","recyledNode"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.hyperapp = {})));\n}(this, (function (exports) { 'use strict';\n\nfunction h(name, props) {\n  var node;\n  var rest = [];\n  var children = [];\n  var length = arguments.length;\n\n  while (length-- > 2) rest.push(arguments[length]);\n\n  while (rest.length) {\n    if (Array.isArray((node = rest.pop()))) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length]);\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node);\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(props || {}, children)\n    : {\n        name: name,\n        props: props || {},\n        children: children\n      }\n}\n\nfunction app(state, actions, view, container) {\n  var renderLock;\n  var invokeLaterStack = [];\n  var rootElement = (container && container.children[0]) || null;\n  var lastNode = rootElement && toVNode(rootElement, [].map);\n  var globalState = copy(state);\n  var wiredActions = copy(actions);\n\n  scheduleRender(wireStateToActions([], globalState, wiredActions));\n\n  return wiredActions\n\n  function toVNode(element, map) {\n    return {\n      name: element.nodeName.toLowerCase(),\n      props: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3\n          ? element.nodeValue\n          : toVNode(element, map)\n      })\n    }\n  }\n\n  function render() {\n    renderLock = !renderLock;\n\n    var next = view(globalState, wiredActions);\n    if (container && !renderLock) {\n      rootElement = patch(container, rootElement, lastNode, (lastNode = next));\n    }\n\n    while ((next = invokeLaterStack.pop())) next();\n  }\n\n  function scheduleRender() {\n    if (!renderLock) {\n      renderLock = !renderLock;\n      setTimeout(render);\n    }\n  }\n\n  function copy(target, source) {\n    var obj = {};\n\n    for (var i in target) obj[i] = target[i];\n    for (var i in source) obj[i] = source[i];\n\n    return obj\n  }\n\n  function set(path, value, source) {\n    var target = {};\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1 ? set(path.slice(1), value, source[path[0]]) : value;\n      return copy(source, target)\n    }\n    return value\n  }\n\n  function get(path, source) {\n    for (var i = 0; i < path.length; i++) {\n      source = source[path[i]];\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              if (typeof (data = action(data)) === \"function\") {\n                data = data(get(path, globalState), actions);\n              }\n\n              if (\n                data &&\n                data !== (state = get(path, globalState)) &&\n                !data.then // Promise\n              ) {\n                scheduleRender(\n                  (globalState = set(path, copy(state, data), globalState))\n                );\n              }\n\n              return data\n            };\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = state[key] || {}),\n            (actions[key] = copy(actions[key]))\n          );\n    }\n  }\n\n  function getKey(node) {\n    return node && node.props ? node.props.key : null\n  }\n\n  function setElementProp(element, name, value, isSVG, oldValue) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in copy(oldValue, value)) {\n        element[name][i] = value == null || value[i] == null ? \"\" : value[i];\n      }\n    } else {\n      if (typeof value === \"function\" || (name in element && !isSVG)) {\n        element[name] = value == null ? \"\" : value;\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value);\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name);\n      }\n    }\n  }\n\n  function createElement(node, isSVG) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSVG = isSVG || node.name === \"svg\")\n          ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.name)\n          : document.createElement(node.name);\n\n    if (node.props) {\n      if (node.props.oncreate) {\n        invokeLaterStack.push(function() {\n          node.props.oncreate(element);\n        });\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(createElement(node.children[i], isSVG));\n      }\n\n      for (var name in node.props) {\n        setElementProp(element, name, node.props[name], isSVG);\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldProps, props, isSVG) {\n    for (var name in copy(oldProps, props)) {\n      if (\n        props[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldProps[name])\n      ) {\n        setElementProp(element, name, props[name], isSVG, oldProps[name]);\n      }\n    }\n\n    if (props.onupdate) {\n      invokeLaterStack.push(function() {\n        props.onupdate(element, oldProps);\n      });\n    }\n  }\n\n  function removeChildren(element, node, props) {\n    if ((props = node.props)) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i]);\n      }\n\n      if (props.ondestroy) {\n        props.ondestroy(element);\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node, cb) {\n    function done() {\n      parent.removeChild(removeChildren(element, node));\n    }\n\n    if (node.props && (cb = node.props.onremove)) {\n      cb(element, done);\n    } else {\n      done();\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSVG, nextSibling) {\n    if (node === oldNode) {\n    } else if (oldNode == null) {\n      element = parent.insertBefore(createElement(node, isSVG), element);\n    } else if (node.name && node.name === oldNode.name) {\n      updateElement(\n        element,\n        oldNode.props,\n        node.props,\n        (isSVG = isSVG || node.name === \"svg\")\n      );\n\n      var oldElements = [];\n      var oldKeyed = {};\n      var newKeyed = {};\n\n      for (var i = 0; i < oldNode.children.length; i++) {\n        oldElements[i] = element.childNodes[i];\n\n        var oldChild = oldNode.children[i];\n        var oldKey = getKey(oldChild);\n\n        if (null != oldKey) {\n          oldKeyed[oldKey] = [oldElements[i], oldChild];\n        }\n      }\n\n      var i = 0;\n      var j = 0;\n\n      while (j < node.children.length) {\n        var oldChild = oldNode.children[i];\n        var newChild = node.children[j];\n\n        var oldKey = getKey(oldChild);\n        var newKey = getKey(newChild);\n\n        if (newKeyed[oldKey]) {\n          i++;\n          continue\n        }\n\n        if (newKey == null) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChild, newChild, isSVG);\n            j++;\n          }\n          i++;\n        } else {\n          var recyledNode = oldKeyed[newKey] || [];\n\n          if (oldKey === newKey) {\n            patch(element, recyledNode[0], recyledNode[1], newChild, isSVG);\n            i++;\n          } else if (recyledNode[0]) {\n            patch(\n              element,\n              element.insertBefore(recyledNode[0], oldElements[i]),\n              recyledNode[1],\n              newChild,\n              isSVG\n            );\n          } else {\n            patch(element, oldElements[i], null, newChild, isSVG);\n          }\n\n          j++;\n          newKeyed[newKey] = newChild;\n        }\n      }\n\n      while (i < oldNode.children.length) {\n        var oldChild = oldNode.children[i];\n        if (getKey(oldChild) == null) {\n          removeElement(element, oldElements[i], oldChild);\n        }\n        i++;\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[oldKeyed[i][1].props.key]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1]);\n        }\n      }\n    } else if (node.name === oldNode.name) {\n      element.nodeValue = node;\n    } else {\n      element = parent.insertBefore(\n        createElement(node, isSVG),\n        (nextSibling = element)\n      );\n      removeElement(parent, nextSibling, oldNode);\n    }\n    return element\n  }\n}\n\nexports.h = h;\nexports.app = app;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=hyperapp.js.map\n"]}